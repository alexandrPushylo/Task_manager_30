# Generated by Django 4.1 on 2024-03-23 04:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('telegram_id_chat', models.CharField(max_length=128, verbose_name='Telegram id chat')),
                ('post', models.CharField(default='employee', max_length=50, verbose_name='Должность')),
                ('supervisor_user_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='Ид руководителя')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DriverSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Статус водителя')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
            ],
            options={
                'verbose_name': 'Отметка водителя',
                'verbose_name_plural': 'Табель | Водители',
                'ordering': ['date', 'driver'],
            },
        ),
        migrations.CreateModel(
            name='Technic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название техники')),
                ('type', models.CharField(max_length=255, verbose_name='Тип техники')),
                ('id_information', models.CharField(max_length=256, verbose_name='Идентификационная информация')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('attached_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attached_driver', to=settings.AUTH_USER_MODEL, verbose_name='Прикрепленный водитель')),
                ('supervisor_technic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisor_technic', to=settings.AUTH_USER_MODEL, verbose_name='Руководитель')),
            ],
            options={
                'verbose_name': 'Единица техники',
                'verbose_name_plural': 'Техника',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='WorkDaySheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('status', models.BooleanField(default=True, verbose_name='Рабочий день')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
            ],
            options={
                'verbose_name': 'Рабочий день',
                'verbose_name_plural': 'Рабочие дени',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TechnicSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Статус техники')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technic_sheet', to='dashboard.workdaysheet', verbose_name='Дата')),
                ('driver_sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.driversheet', verbose_name='Табель водителя')),
                ('technic', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.technic', verbose_name='Транспортное средство')),
            ],
            options={
                'verbose_name': 'Отметка техники',
                'verbose_name_plural': 'Табель | Техники',
                'ordering': ['date', 'technic'],
            },
        ),
        migrations.AddField(
            model_name='driversheet',
            name='date',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_sheet', to='dashboard.workdaysheet', verbose_name='Дата'),
        ),
        migrations.AddField(
            model_name='driversheet',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Водитель'),
        ),
        migrations.CreateModel(
            name='ConstructionSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=512, verbose_name='Адрес')),
                ('status', models.BooleanField(default=True, verbose_name='Статус объекта')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('foreman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Прораб')),
            ],
            options={
                'verbose_name': 'Строительный объект',
                'verbose_name_plural': 'Строительные объекты',
                'ordering': ['address', 'foreman'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationToday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус заявки')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Примечание для объекта')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('construction_site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.constructionsite', verbose_name='Строительный объект')),
                ('date', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='application_today', to='dashboard.workdaysheet', verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Заявка на объект',
                'verbose_name_plural': 'Заявки на объект',
                'ordering': ['-date', 'construction_site'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationTechnic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('priority', models.IntegerField(default=1, verbose_name='Приоритет заявки')),
                ('isChecked', models.BooleanField(default=False, verbose_name='Проверена?')),
                ('id_orig_app', models.IntegerField(blank=True, null=True, verbose_name='Ид ApplicationTechnic')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('application_today', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.applicationtoday', verbose_name='Заявка на объект')),
                ('technic_sheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.technicsheet', verbose_name='Отметка техники')),
            ],
            options={
                'verbose_name': 'Заявка на технику',
                'verbose_name_plural': 'Заявки на технику',
            },
        ),
        migrations.CreateModel(
            name='ApplicationMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=2048, verbose_name='Описание')),
                ('isChecked', models.BooleanField(default=False, verbose_name='Проверенна?')),
                ('isArchive', models.BooleanField(default=False, verbose_name='Архивирован?')),
                ('application_today', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.applicationtoday', verbose_name='Заявка на объект')),
            ],
            options={
                'verbose_name': 'Заявка на материал',
                'verbose_name_plural': 'Заявка на материалы',
            },
        ),
    ]
