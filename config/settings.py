"""
Django settings for Task_manager_30 project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

from config import creds

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = creds.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = creds.DEBUG
TECH_SUPPORT_MODE = creds.TECH_SUPPORT_MODE

ALLOWED_HOSTS = creds.ALLOWED_HOSTS
INTERNAL_IPS = ALLOWED_HOSTS  # ['127.0.0.1', '10.0.0.3', 'localhost']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'debug_toolbar',
    'dashboard.apps.DashboardConfig',
    'rest_framework',
    'corsheaders',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': creds.DATABASES['default']['ENGINE'],
#         'NAME': BASE_DIR / creds.DATABASES['default']['NAME'],
#     }
# }

DATABASES = creds.DATABASES

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Minsk'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static_files'), ]
STATIC_ROOT = BASE_DIR / '../static'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_COOKIE_AGE = 86400 * 31  # 86400 sec = 1 day
SESSION_SAVE_EVERY_REQUEST = True

AUTH_USER_MODEL = 'dashboard.User'


SESSION_COOKIE_SAMESITE = False
SESSION_COOKIE_SECURE = False
#
CSRF_COOKIE_SAMESITE = False
CSRF_COOKIE_SECURE = False
#
CSRF_TRUSTED_ORIGINS = ['https://*.localhost','https://*.127.0.0.1', 'http://localhost:3000', 'http://127.0.0.1:3000', 'http://192.168.1.42:3000', 'https://localhost:3000', 'https://127.0.0.1:3000', 'https://192.168.1.42:3000']
# CSRF_HEADER_NAME = 'http_x-csrftoken'
CSRF_COOKIE_NAME = "csrftoken"
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = True
CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFTOKEN', 'csrftoken']
CORS_ALLOWED_ORIGINS = CSRF_TRUSTED_ORIGINS# ['https://*.localhost','https://*.127.0.0.1', 'http://localhost:3000', 'http://127.0.0.1:3000', 'http://192.168.1.42:3000']
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
# ]
CORS_ALLOW_HEADERS = (
    'csrftoken',
    'content-type',
    'X-CSRFTOKEN'
)

# CSRF_COOKIE_SECURE = False
# CSRF_COOKIE_HTTPONLY = False
# CSRF_COOKIE_HTTPONLY = True